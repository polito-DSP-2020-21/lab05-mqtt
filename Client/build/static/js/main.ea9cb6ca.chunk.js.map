{"version":3,"sources":["auth/AuthContext.js","components/Header.js","components/Filters.js","components/TodoItem.js","components/TodoList.js","components/TodoForm.js","components/LoginForm.js","api/Task.js","api/API.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","authUser","Header","props","Consumer","context","Navbar","bg","variant","expand","fixed","Toggle","aria-controls","aria-expanded","aria-label","onClick","showSidebar","Brand","href","className","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","Nav","Link","as","NavLink","to","getPublicTasks","getOnline","Form","inline","role","FormControl","type","placeholder","name","logoutUser","Filters","createProject","project","key","ListGroup","Item","action","active","activeFilter","onFilter","this","id","projects","map","Component","TodoItem","mode","task","deleteTask","updateTask","important","defaultChecked","completed","onChange","ev","target","checked","onChangeTask","disabled","htmlFor","description","privateTask","user","deadline","isBefore","moment","format","Image","src","alt","TodoList","tasks","editTask","useEffect","authErr","TodoForm","updateField","value","setState","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","Object","assign","state","deadlineDate","deadlineTime","addOrEditTask","submitted","reportValidity","method","onSubmit","Group","controlId","Label","Control","required","autoFocus","Check","label","Button","LoginForm","onChangeUsername","username","onChangePassword","password","onLogin","Container","fluid","Row","Col","loginUser","Alert","msg","Task","undefined","Date","json","t","a","localStorage","getItem","param","filter","url","fetch","response","responseJson","tasksJson","console","log","ok","status","errObj","baseURL","Promise","resolve","reject","headers","body","JSON","stringify","then","obj","catch","err","errors","taskId","email","setItem","API","isAuthenticated","getTasks","addTask","userLogin","userLogout","App","logout","errorObj","handleErrors","login","getProjects","history","push","err0","openMobileMenu","getOnlineInfo","filterTasks","editedTask","Set","Provider","path","sm","render","match","Collapse","in","params","size","taskToUpdate","find","withRouter","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ea9cb6ca.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const AuthContext = React.createContext({authUser: {}});\r\n","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport {AuthContext} from '../auth/AuthContext'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\r\n  return(\r\n    <AuthContext.Consumer>\r\n      {(context) => (\r\n        \r\n      <Navbar bg=\"success\" variant=\"dark\" expand=\"sm\" fixed=\"top\">\r\n        <Navbar.Toggle aria-controls=\"left-sidebar\" aria-expanded=\"false\" aria-label=\"Toggle sidebar\" onClick={props.showSidebar}/>\r\n\r\n        <Navbar.Brand href=\"index.html\">\r\n          <svg className=\"bi bi-check-all\" width=\"30\" height=\"30\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" d=\"M12.354 3.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3.5-3.5a.5.5 0 11.708-.708L5 10.293l6.646-6.647a.5.5 0 01.708 0z\" clipRule=\"evenodd\"/>\r\n            <path d=\"M6.25 8.043l-.896-.897a.5.5 0 10-.708.708l.897.896.707-.707zm1 2.414l.896.897a.5.5 0 00.708 0l7-7a.5.5 0 00-.708-.708L8.5 10.293l-.543-.543-.707.707z\"/>\r\n          </svg>\r\n          ToDO Manager\r\n        </Navbar.Brand>\r\n        \r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={NavLink} to=\"/tasks\">My Tasks</Nav.Link> \r\n          <Nav.Link as={NavLink} to=\"/public\" onClick = {() => props.getPublicTasks()}> Public Tasks</Nav.Link> \r\n          <Nav.Link as={NavLink} to=\"/tasks\" onClick = {() => props.getOnline()}> Online</Nav.Link> \r\n        </Nav>\r\n        \r\n        <Form inline className=\"my-2 my-lg-0 mx-auto d-none d-sm-block\" role=\"search\">\r\n          <FormControl type=\"search\" className=\"mr-sm-2\" placeholder=\"Search\" aria-label=\"Search query\" />\r\n        </Form>\r\n\r\n        <Nav className=\"ml-md-auto\">\r\n          {context.authUser && \r\n            <>\r\n              <Navbar.Brand>Welcome {context.authUser.name}!</Navbar.Brand> \r\n              <Nav.Link onClick = {() => {context.logoutUser()}}>Logout</Nav.Link>\r\n            </>}\r\n          {!context.authUser && <Nav.Link as = {NavLink} to = \"/login\">Login</Nav.Link>}\r\n          <Nav.Link href=\"#\">\r\n            <svg className=\"bi bi-people-circle\" width=\"30\" height=\"30\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M13.468 12.37C12.758 11.226 11.195 10 8 10s-4.757 1.225-5.468 2.37A6.987 6.987 0 008 15a6.987 6.987 0 005.468-2.63z\"/>\r\n              <path fillRule=\"evenodd\" d=\"M8 9a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\"/>\r\n              <path fillRule=\"evenodd\" d=\"M8 1a7 7 0 100 14A7 7 0 008 1zM0 8a8 8 0 1116 0A8 8 0 010 8z\" clipRule=\"evenodd\"/>\r\n            </svg>\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n      )}\r\n    </AuthContext.Consumer>\r\n\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Filters extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onFilter(this.props.activeFilter);\r\n    }\r\n\r\n\r\n    createProject = (project) => {\r\n        return (\r\n            <NavLink key = {`#${project}`} to = {`/tasks/${project}`}><ListGroup.Item action active = {this.props.activeFilter === project ? true : false} onClick = {() => this.props.onFilter(project)}>{project}</ListGroup.Item></NavLink>\r\n        );\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <ListGroup  variant=\"flush\">\r\n                    <NavLink key = \"#all\" to = \"/tasks\"><ListGroup.Item action active = {this.props.activeFilter === \"all\" ? true : false} id = \"filter-all\" onClick = {() => this.props.onFilter(\"all\")}>All</ListGroup.Item></NavLink>\r\n                    <NavLink key = \"#important\" to = \"/tasks/important\"><ListGroup.Item action active = {this.props.activeFilter === \"important\" ? true : false} id = \"filter-important\" onClick = {() => this.props.onFilter(\"important\")}>Important</ListGroup.Item></NavLink>\r\n                    <NavLink key = \"#today\" to = \"/tasks/today\"><ListGroup.Item action active = {this.props.activeFilter === \"today\" ? true : false} id = \"filter-today\" onClick = {() => this.props.onFilter(\"today\")}>Today</ListGroup.Item></NavLink>\r\n                    <NavLink key = \"#week\" to = \"/tasks/week\"><ListGroup.Item action active = {this.props.activeFilter === \"week\" ? true : false} id = \"filter-week\" onClick = {() => this.props.onFilter(\"week\")}>Next 7 Days</ListGroup.Item></NavLink>\r\n                    <NavLink key = \"#private\" to = \"/tasks/private\"><ListGroup.Item action active = {this.props.activeFilter === \"private\" ? true : false} id = \"filter-private\" onClick = {() => this.props.onFilter(\"private\")}>Private</ListGroup.Item></NavLink>\r\n                    <NavLink key = \"#shared\" to = \"/tasks/shared\"><ListGroup.Item action active = {this.props.activeFilter === \"shared\" ? true : false} id = \"filter-shared\" onClick = {() => this.props.onFilter(\"shared\")}>Shared With...</ListGroup.Item></NavLink>\r\n                    <ListGroup.Item className=\"p-3 mt-5 list-title\">Projects</ListGroup.Item>\r\n                    {this.props.projects.map(this.createProject) }\r\n                </ListGroup>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport Image from 'react-bootstrap/Image';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { Link } from 'react-router-dom' ;\r\n\r\nconst TodoItem = (props) => {\r\n\r\n  let {mode,task, deleteTask, updateTask} = props;\r\n\r\n  const onChangeTask = (ev,task) => {\r\n    if(ev.target.checked) {\r\n      task.completed = true;\r\n      updateTask(task);\r\n    } else {\r\n      task.completed = false;\r\n      updateTask(task);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ListGroup.Item id = {task.id}>\r\n      <div className=\"d-flex w-100 justify-content-between\">\r\n          <div className=\"custom-control custom-checkbox\">\r\n            {mode === \"private\" && <input type=\"checkbox\" className={task.important ? \"custom-control-input important\" : \"custom-control-input\"} id={\"check-t\" +  task.id} defaultChecked = {task.completed} onChange = {(ev) => onChangeTask(ev,task)}/>}\r\n            {mode === \"public\" && <input type=\"checkbox\" className={task.important ? \"custom-control-input important\" : \"custom-control-input\"} id={\"check-t\" +  task.id} defaultChecked = {task.completed} disabled />}\r\n\r\n            <label className=\"custom-control-label\"  htmlFor={\"check-t\" +  task.id} >{task.description}</label>\r\n            <span className=\"badge badge-success ml-4\">{task.project}</span>\r\n          </div>\r\n          {!task.privateTask && mode === \"public\" &&\r\n            <small>{task.user}</small>\r\n          }\r\n          {!task.privateTask && (\r\n                <svg className=\"bi bi-person-square\" width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\" clipRule=\"evenodd\"/>\r\n                  <path fillRule=\"evenodd\" d=\"M2 15v-1c0-1 1-4 6-4s6 3 6 4v1H2zm6-6a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\"/>\r\n                </svg>)}\r\n\r\n\r\n          {task.deadline &&  (\r\n            <small className = {task.deadline.isBefore(moment()) ? \"date bg-danger text-white\" : \"date\"}>{task.deadline.format(\"dddd, MMMM Do YYYY, h:mm:ss a\")} </small>\r\n          )}\r\n          \r\n          {mode === \"private\" && <div>\r\n            <Link to ={`/task/${task.id}`}><Image width=\"20\" height=\"20\" className=\"img-button\" src=\"/svg/edit.svg\" alt =\"\" /*onClick={() => editTask(task)}*//></Link>\r\n            <Image width=\"20\" height=\"20\" className=\"img-button\" src=\"/svg/delete.svg\" alt =\"\" onClick={() => deleteTask(task)}/>\r\n          </div>}\r\n\r\n        </div>\r\n    </ListGroup.Item>\r\n  );\r\n}\r\nexport default TodoItem;\r\n","import React,{ useEffect } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AuthContext} from '../auth/AuthContext'\r\n\r\nconst TodoList = (props) => {\r\n\r\n  let {mode, tasks, editTask, updateTask, deleteTask, getPublicTasks} = props;\r\n\r\n  //same as componentDidMount()\r\n  useEffect(() => {\r\n    if(mode === \"public\"){\r\n      getPublicTasks();\r\n    }\r\n  }, []);\r\n\r\n\r\n  return(\r\n    <AuthContext.Consumer>\r\n      {(context) => (\r\n        <>\r\n        {context.authErr && <Redirect to = \"/login\"></Redirect>}\r\n        \r\n        {tasks && \r\n        <ListGroup as=\"ul\" variant=\"flush\">\r\n          {tasks.map((task) => <TodoItem mode = {mode} key = {task.id} task = {task} editTask = {editTask} updateTask = {updateTask} deleteTask = {deleteTask} />) }\r\n        </ListGroup>}\r\n        </>\r\n      )}\r\n    </AuthContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport Button from'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport moment from 'moment';\r\nimport {Link} from 'react-router-dom';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AuthContext} from '../auth/AuthContext'\r\n\r\nclass TodoForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if(this.props.task){\r\n      this.state = {...this.props.task};\r\n      if(this.props.task.deadline){\r\n        this.state.deadlineDate = this.props.task.deadline.format(\"YYYY-MM-DD\");\r\n        this.state.deadlineTime = this.props.task.deadline.format(\"HH:mm\");\r\n      }\r\n    } else {\r\n      this.state = {description: '', project: '', important: false, privateTask: true, deadlineDate: '', deadlineTime: ''};\r\n    }\r\n\r\n    this.state.submitted = false;\r\n  }\r\n\r\n  updateField = (name, value) => {\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    if (!form.checkValidity()) {\r\n      form.reportValidity();\r\n    } else {\r\n      let task = Object.assign({}, this.state);\r\n      // set a single deadline\r\n      if(task.deadlineDate && task.deadlineTime && task.deadlineDate !== \"\" && task.deadlineTime !== \"\")\r\n        task.deadline = moment(task.deadlineDate + \" \" + task.deadlineTime);\r\n      else if(task.deadlineDate && task.deadlineDate !== \"\")\r\n        task.deadline = moment(task.deadlineDate);\r\n      \r\n      this.props.addOrEditTask(task);\r\n      this.setState({submitted : true});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.submitted)\r\n      return <Redirect to='/' />;\r\n    return(\r\n      <AuthContext.Consumer>\r\n      {(context) => (\r\n        <>\r\n          {!this.props.task && <h1>Add a Task</h1>}\r\n          {this.props.task && <h1>Update Task</h1>}\r\n\r\n          <Form method=\"POST\" onSubmit={(event) => this.handleSubmit(event)}>\r\n              <Form.Group controlId=\"description\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control type=\"text\" name=\"description\" placeholder=\"Type a description...\" value = {this.state.description} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)} required autoFocus/>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"project\">\r\n                <Form.Label>Project</Form.Label>\r\n                <Form.Control type=\"text\" name=\"project\" placeholder=\"Type a project for the task...\" value = {this.state.project} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)}/>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"important\">\r\n                <Form.Check type=\"checkbox\" label=\"Important\" id=\"important\" name=\"important\" checked = {this.state.important} onChange={(ev) => this.updateField(ev.target.name, ev.target.checked)} />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"private\">\r\n                <Form.Check type=\"checkbox\" label=\"Private\" id=\"private\" name=\"privateTask\" onChange={(ev) => this.updateField(ev.target.name, ev.target.checked)} checked={this.state.privateTask}/>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"deadline-date\">\r\n                <Form.Label>Deadline</Form.Label>\r\n                <Form.Control type=\"date\" name=\"deadlineDate\" value = {this.state.deadlineDate} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)}/>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"deadline-time\">\r\n                <Form.Control type=\"time\" name=\"deadlineTime\" value = {this.state.deadlineTime} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)}/>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">{this.state.id? 'Update': 'Add'}</Button>\r\n                <Link to = \"/tasks\">Cancel</Link>\r\n\r\n              </Form.Group>\r\n          </Form>\r\n        </>\r\n      )}\r\n      </AuthContext.Consumer>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from'react-bootstrap/Button';\r\nimport Alert from'react-bootstrap/Alert';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AuthContext} from '../auth/AuthContext'\r\n\r\nclass LoginForm extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {username: '', password: '', submitted: false};\r\n    }\r\n\r\n    onChangeUsername = (event) => {\r\n        this.setState({username : event.target.value});\r\n    }; \r\n    \r\n    onChangePassword = (event) => {\r\n        this.setState({password : event.target.value});\r\n    };\r\n    \r\n    handleSubmit = (event, onLogin) => {\r\n        event.preventDefault();\r\n        onLogin(this.state.username,this.state.password);\r\n        this.setState({submitted : true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.submitted)\r\n            return <Redirect to='/' />;\r\n        return(\r\n            <AuthContext.Consumer>\r\n                {(context) => (\r\n                <>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col>\r\n                            <h2 className=\"ui teal image header\">\r\n                                <svg className=\"bi bi-check-all\" width=\"30\" height=\"30\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fillRule=\"evenodd\" d=\"M12.354 3.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3.5-3.5a.5.5 0 11.708-.708L5 10.293l6.646-6.647a.5.5 0 01.708 0z\" clipRule=\"evenodd\"/>\r\n                                    <path d=\"M6.25 8.043l-.896-.897a.5.5 0 10-.708.708l.897.896.707-.707zm1 2.414l.896.897a.5.5 0 00.708 0l7-7a.5.5 0 00-.708-.708L8.5 10.293l-.543-.543-.707.707z\"/>\r\n                                </svg>  \r\n                                <div className=\"content\">\r\n                                    Log-in to your account\r\n                                </div>\r\n                            </h2>\r\n\r\n                            <Form method=\"POST\" onSubmit={(event) => this.handleSubmit(event, context.loginUser)}>\r\n                                <Form.Group controlId=\"username\">\r\n                                    <Form.Label>E-mail</Form.Label>\r\n                                    <Form.Control type=\"email\" name=\"email\" placeholder=\"E-mail\" value = {this.state.username} onChange={(ev) => this.onChangeUsername(ev)} required autoFocus/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" value = {this.state.password} onChange={(ev) => this.onChangePassword(ev)} required/>\r\n                                </Form.Group>\r\n\r\n                                <Button variant=\"primary\" type=\"submit\">Login</Button>\r\n\r\n                            </Form>\r\n\r\n                            {context.authErr && \r\n                            <Alert variant= \"danger\">\r\n                                {context.authErr.msg}\r\n                            </Alert>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                </>\r\n                )}\r\n            </AuthContext.Consumer>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LoginForm;","import moment from 'moment';\r\n\r\nclass Task{    \r\n\r\n    constructor(id, description, important, privateTask, deadline, project, completed,user) {\r\n        if(id){\r\n            this.id = id;\r\n        }\r\n            \r\n        this.description = description;\r\n        this.important = important;\r\n        this.privateTask = privateTask;\r\n\r\n        if(deadline !== undefined){\r\n            this.deadline = moment(new Date(deadline));\r\n        }\r\n        if(project){\r\n            this.project = project;\r\n        }\r\n        this.completed = completed || false;\r\n        this.user = user;\r\n    }\r\n\r\n    /**\r\n     * Construct a Task from a plain object\r\n     * @param {{}} json \r\n     * @return {Task} the newly created Task object\r\n     */\r\n    static from(json) {\r\n        const t =  Object.assign(new Task(), json);\r\n        if(t.deadline){\r\n            t.deadline = moment(new Date(t.deadline));\r\n        }\r\n        return t;\r\n    }\r\n\r\n}\r\n\r\nexport default Task;\r\n\r\n","import Task from './Task';\r\nconst baseURL = \"/api\";\r\n\r\nasync function isAuthenticated() {\r\n\r\n    const userId = localStorage.getItem('userId')\r\n    if( userId == undefined ) {\r\n        let err = { param: \"Client\", msg: \"Not logged in\" };\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function getTasks(filter) {\r\n    const userId = localStorage.getItem('userId')\r\n    if( userId == undefined ) {\r\n        let err = { param: \"Client\", msg: \"Not logged in\" };\r\n        throw err;\r\n    }\r\n    let url = \"/tasks\" + localStorage.getItem('userId');\r\n\r\n    if (filter) {\r\n        const queryParams = \"&filter=\" + filter;\r\n        url += queryParams;\r\n    }\r\n    const response = await fetch(baseURL + url);\r\n    const responseJson = await response.json();\r\n    const tasksJson = responseJson.tasks;\r\n    console.log(tasksJson);\r\n    if (response.ok) {\r\n        //return tasksJson.map((t) => Task.from(t));\r\n        return tasksJson.map((t) => new Task(t.id, t.description, t.important, t.privateTask, t.deadline, t.project, t.completed, t.user));\r\n    } else {\r\n        let err = { status: response.status, errObj: tasksJson };\r\n        throw err; // An object with the error coming from the server\r\n    }\r\n}\r\n\r\n\r\nasync function getPublicTasks() {\r\n    let url = \"/tasks/public\";\r\n\r\n    const response = await fetch(baseURL + url);\r\n    const responseJson = await response.json();\r\n    const tasksJson = responseJson.tasks;\r\n    if (response.ok) {\r\n        //return tasksJson.map((t) => Task.from(t));\r\n        return tasksJson.map((t) => new Task(t.id, t.description, t.important, t.privateTask, t.deadline, t.project, t.completed, t.user));\r\n    } else {\r\n        let err = { status: response.status, errObj: tasksJson };\r\n        throw err; // An object with the error coming from the server\r\n    }\r\n}\r\n\r\nasync function addTask(task) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(baseURL + \"/tasks\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(task),\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                resolve(null);\r\n            } else {\r\n                // analyze the cause of error\r\n                response.json()\r\n                    .then((obj) => { reject(obj); }) // error msg in the response body\r\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\r\n            }\r\n        }).catch((err) => { reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\r\n    });\r\n}\r\n\r\nasync function updateTask(task) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(baseURL + \"/tasks/\" + task.id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(task),\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n\r\n            } else {\r\n                // analyze the cause of error\r\n                response.json()\r\n                    .then((obj) => { reject(obj); }) // error msg in the response body\r\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\r\n            }\r\n        }).catch((err) => { reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\r\n    });\r\n}\r\n\r\n\r\nasync function deleteTask(taskId) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(baseURL + \"/tasks/\" + taskId, {\r\n            method: 'DELETE'\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                resolve(null);\r\n            } else {\r\n                // analyze the cause of error\r\n                response.json()\r\n                    .then((obj) => { reject(obj); }) // error msg in the response body\r\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\r\n            }\r\n        }).catch((err) => { reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\r\n    });\r\n}\r\n\r\nasync function userLogin(username, password) {\r\n    if(username==undefined ||  password==undefined){\r\n        let err = { param: \"Client\", msg: \"Not logged in\" };\r\n        throw err;\r\n    }\r\n    \r\n    return new Promise((resolve, reject) => {\r\n        fetch(baseURL + '/users/authenticator?type=login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: username, password: password }),\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                response.json().then((id) => {\r\n                    localStorage.setItem('userId', \"/?userId=\" + id.id);\r\n                    resolve(id.id);\r\n                });\r\n            } else {\r\n                // analyze the cause of error\r\n                response.json()\r\n                    .then((obj) => { reject(obj); }) // error msg in the response body\r\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\r\n            }\r\n        }).catch((err) => { reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\r\n    });\r\n}\r\n\r\nasync function userLogout(username, password) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(baseURL + '/users/authenticator?type=logout', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email: username, password: password }),\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                resolve(null);\r\n            } else {\r\n                // analyze the cause of error\r\n                response.json()\r\n                    .then((obj) => { reject(obj); }) // error msg in the response body\r\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nconst API = { isAuthenticated, getTasks, getPublicTasks, addTask, updateTask, deleteTask, userLogin, userLogout };\r\nexport default API;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Filters from './components/Filters';\r\nimport TodoList from './components/TodoList';\r\nimport TodoForm from './components/TodoForm';\r\nimport LoginForm from './components/LoginForm';\r\nimport API from './api/API';\r\nimport { Redirect, Route, Link } from 'react-router-dom';\r\nimport { Switch } from 'react-router';\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass App extends React.Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { tasks: [], projects: [], filter: 'all', openMobileMenu: false, editedTask: null };\r\n        }\r\n\r\n        componentDidMount() {\r\n            //check if the user is authenticated\r\n            API.isAuthenticated().then(\r\n                (user) => {\r\n                    this.setState({ authUser: user });\r\n                }\r\n            ).catch((err) => {\r\n                this.setState({ authErr: err.errorObj });\r\n                this.props.history.push(\"/login\");\r\n            });\r\n        }\r\n\r\n        handleErrors(err) {\r\n            if (err) {\r\n                if (err.status && err.status === 401) {\r\n                    this.setState({ authErr: err.errorObj });\r\n                    this.props.history.push(\"/login\");\r\n                }\r\n            }\r\n        }\r\n\r\n        // Add a logout method\r\n        logout = (username, password) => {\r\n            API.userLogout(username, password).then(() => {\r\n                this.setState({ authUser: null, authErr: null, tasks: null });\r\n                API.getTasks().catch((errorObj) => { this.handleErrors(errorObj) });\r\n            });\r\n        }\r\n\r\n        // Add a login method\r\n        login = (username, password) => {\r\n            API.userLogin(username, password).then(\r\n                (user) => {\r\n                    API.getTasks()\r\n                        .then((tasks) => {\r\n                            this.setState({ tasks: tasks, projects: this.getProjects(tasks), authUser: user, authErr: null });\r\n                            this.props.history.push(\"/tasks\");\r\n                        })\r\n                        .catch((errorObj) => {\r\n                            this.handleErrors(errorObj);\r\n                        });\r\n                }\r\n            ).catch(\r\n                (errorObj) => {\r\n                    const err0 = errorObj.errors[0];\r\n                    this.setState({ authErr: err0 });\r\n                }\r\n            );\r\n        }\r\n\r\n        getProjects(tasks) {\r\n            return [...new Set(tasks.map((task) => {\r\n                if (task.project)\r\n                    return task.project;\r\n                else\r\n                    return null;\r\n            }))];\r\n        }\r\n\r\n        showSidebar = () => {\r\n            this.setState((state) => ({ openMobileMenu: !state.openMobileMenu }));\r\n        }\r\n\r\n        getPublicTasks = () => {\r\n            API.getPublicTasks()\r\n                .then((tasks) => this.setState({ tasks: tasks }))\r\n                .catch((errorObj) => {\r\n                    this.handleErrors(errorObj);\r\n                });\r\n        }\r\n\r\n        getOnlineInfo = () => {\r\n          API.getOnlineInfo();\r\n        }\r\n        \r\n       \r\n\r\n        filterTasks = (filter) => {\r\n            if (filter === \"all\") {\r\n                API.getTasks()\r\n                    .then((tasks) => this.setState({ tasks: tasks, filter: 'all', projects: this.getProjects(tasks) }))\r\n                    .catch((errorObj) => {\r\n                        this.handleErrors(errorObj);\r\n                    });\r\n            } else {\r\n                API.getTasks(filter)\r\n                    .then((tasks) => {\r\n                        this.setState({ tasks: tasks, filter: filter, projects: this.getProjects(tasks) });\r\n                    })\r\n                    .catch((errorObj) => {\r\n                        this.handleErrors(errorObj);\r\n                    });;\r\n            }\r\n        }\r\n\r\n        addOrEditTask = (task) => {\r\n            if (!task.id) {\r\n                //ADD\r\n                API.addTask(task)\r\n                    .then(() => {\r\n                        //get the updated list of tasks from the server\r\n                        API.getTasks().then((tasks) => this.setState({ tasks: tasks, filter: 'All', projects: this.getProjects(tasks) }));\r\n                    })\r\n                    .catch((errorObj) => {\r\n                        this.handleErrors(errorObj);\r\n                    });\r\n            } else {\r\n                //UPDATE\r\n                API.updateTask(task)\r\n                    .then(() => {\r\n                        //get the updated list of tasks from the server\r\n                        API.getTasks().then((tasks) => this.setState({ tasks: tasks, filter: 'All', projects: this.getProjects(tasks) }));\r\n                    })\r\n                    .catch((errorObj) => {\r\n                        this.handleErrors(errorObj);\r\n                    });\r\n            }\r\n        }\r\n\r\n        editTask = (task) => {\r\n            this.setState({ editedTask: task });\r\n        }\r\n\r\n        deleteTask = (task) => {\r\n            API.deleteTask(task.id)\r\n                .then(() => {\r\n                    //get the updated list of tasks from the server\r\n                    API.getTasks().then((tasks) => this.setState({ tasks: tasks, filter: 'All', projects: this.getProjects(tasks) }));\r\n                })\r\n                .catch((errorObj) => {\r\n                    this.handleErrors(errorObj);\r\n                });\r\n        }\r\n\r\n        render() {\r\n                // compose value prop as object with user object and logout method\r\n                const value = {\r\n                    authUser: this.state.authUser,\r\n                    authErr: this.state.authErr,\r\n                    loginUser: this.login,\r\n                    logoutUser: this.logout\r\n                }\r\n\t\t\t\t   return( \r\n      <AuthContext.Provider value={value}>\r\n        \r\n        <Header showSidebar={this.showSidebar} getPublicTasks = {this.getPublicTasks}/>\r\n\r\n        <Container fluid>\r\n\r\n          <Switch>\r\n            <Route path=\"/login\">\r\n              <Row className=\"vheight-100\">\r\n                <Col sm={4}></Col>\r\n                <Col sm={4} className=\"below-nav\"> \r\n                  <LoginForm/>\r\n                </Col>\r\n              </Row>\r\n            </Route>\r\n\r\n            <Route path=\"/public\">\r\n              <Row className=\"vheight-100\">\r\n                <Col sm={12} className=\"below-nav\"> \r\n                  <h5><strong>Public Tasks</strong></h5>\r\n                  <TodoList tasks = {this.state.tasks} mode = \"public\" getPublicTasks = {this.getPublicTasks} />\r\n                </Col>\r\n              </Row>\r\n            </Route>\r\n\r\n            <Route path=\"/online\">\r\n              <Row className=\"vheight-100\">\r\n                <Col sm={12} className=\"below-nav\"> \r\n                  <h5><strong>Online Users</strong></h5>\r\n                  \r\n                </Col>\r\n              </Row>\r\n            </Route>\r\n\r\n            <Route path=\"/tasks\">\r\n              <Row className=\"vheight-100\">\r\n                <Switch>\r\n                  <Route path=\"/tasks/:filter\"  render={({match}) => {\r\n                      return <Collapse in={this.state.openMobileMenu}>\r\n                        <Col sm={4} bg=\"light\" id=\"left-sidebar\" className=\"collapse d-sm-block below-nav\">\r\n                          <Filters projects = {this.state.projects} onFilter = {this.filterTasks} activeFilter = {match.params.filter}/>\r\n                        </Col>\r\n                      </Collapse>;\r\n                  }}/> \r\n                  <Route render={({match}) => {\r\n                      return <Collapse in={this.state.openMobileMenu}>\r\n                      <Col sm={4} bg=\"light\" id=\"left-sidebar\" className=\"collapse d-sm-block below-nav\">\r\n                        <Filters projects = {this.state.projects} onFilter = {this.filterTasks} activeFilter = \"all\"/>\r\n                      </Col>\r\n                    </Collapse>;\r\n                  }}/>\r\n                      \r\n                </Switch>\r\n\r\n                <Col sm={8} className=\"below-nav\"> \r\n                  <h5><strong>Filter: </strong>{this.state.filter}</h5>\r\n                  <TodoList  mode = \"private\" tasks = {this.state.tasks} editTask = {this.editTask} updateTask = {this.addOrEditTask} deleteTask = {this.deleteTask} />\r\n                  <Link to = \"/add\"><Button variant=\"success\" size=\"lg\" className=\"fixed-right-bottom\">&#43;</Button></Link>\r\n                </Col>\r\n              </Row>\r\n            </Route>\r\n\r\n            <Route path=\"/add\">\r\n              <Row className=\"vheight-100\">\r\n                <Col sm={4}></Col>\r\n                <Col sm={4} className=\"below-nav\"> \r\n                  <TodoForm addOrEditTask={this.addOrEditTask}/>\r\n                </Col>\r\n              </Row>\r\n            </Route>\r\n\r\n            <Route path='/task/:id' render={(props) => {\r\n              let taskToUpdate = this.state.tasks.find((t)=>(t.id==props.match.params.id));\r\n              return (<Row className=\"vheight-100\">\r\n                        <Col sm={4}></Col>\r\n                        <Col sm={4} className=\"below-nav\"> \r\n                          <TodoForm addOrEditTask={this.addOrEditTask} task={taskToUpdate}/>\r\n                        </Col>\r\n                      </Row>);\r\n            }}/>\r\n\r\n            <Route>\r\n              <Redirect to='/tasks' />\r\n            </Route>\r\n\r\n          </Switch>            \r\n\r\n          \r\n        </Container>\r\n      </AuthContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}